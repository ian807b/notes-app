{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class NotesService {\n  constructor() {\n    this.notes = new Array();\n  }\n  getAll() {\n    return this.notes;\n  }\n  get(id) {\n    return this.notes[id];\n  }\n  getId(note) {\n    return this.notes.indexOf(note);\n  }\n  add(note) {\n    let newLength = this.notes.push(note);\n    let index = newLength - 1;\n    return index;\n  }\n  update(id, title, body) {\n    let note = this.notes[id];\n    note.title = title;\n    note.body = body;\n  }\n  delete(id) {\n    this.notes.splice(id, 1);\n  }\n}\nNotesService.ɵfac = function NotesService_Factory(t) {\n  return new (t || NotesService)();\n};\nNotesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: NotesService,\n  factory: NotesService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAMA,OAAM,MAAOA,YAAY;EAGvBC;IAFA,UAAK,GAAW,IAAIC,KAAK,EAAQ;EAElB;EAEfC,MAAM;IACJ,OAAO,IAAI,CAACC,KAAK;EACnB;EAEAC,GAAG,CAACC,EAAU;IACZ,OAAO,IAAI,CAACF,KAAK,CAACE,EAAE,CAAC;EACvB;EAEAC,KAAK,CAACC,IAAU;IACd,OAAO,IAAI,CAACJ,KAAK,CAACK,OAAO,CAACD,IAAI,CAAC;EACjC;EAEAE,GAAG,CAACF,IAAU;IACZ,IAAIG,SAAS,GAAG,IAAI,CAACP,KAAK,CAACQ,IAAI,CAACJ,IAAI,CAAC;IACrC,IAAIK,KAAK,GAAGF,SAAS,GAAG,CAAC;IACzB,OAAOE,KAAK;EACd;EAEAC,MAAM,CAACR,EAAU,EAAES,KAAa,EAAEC,IAAY;IAC5C,IAAIR,IAAI,GAAG,IAAI,CAACJ,KAAK,CAACE,EAAE,CAAC;IACzBE,IAAI,CAACO,KAAK,GAAGA,KAAK;IAClBP,IAAI,CAACQ,IAAI,GAAGA,IAAI;EAClB;EAEAC,MAAM,CAACX,EAAU;IACf,IAAI,CAACF,KAAK,CAACc,MAAM,CAACZ,EAAE,EAAE,CAAC,CAAC;EAC1B;;AA/BWN,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAmB,SAAZnB,YAAY;EAAAoB,YAFX;AAAM","names":["NotesService","constructor","Array","getAll","notes","get","id","getId","note","indexOf","add","newLength","push","index","update","title","body","delete","splice","factory","providedIn"],"sourceRoot":"","sources":["/Users/ianh/Documents/SFU/Spring 2023/CMPT 372/Assignment/Assignment 3/notes-app/src/app/shared/notes.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Note } from './note.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotesService {\n  notes: Note[] = new Array<Note>();\n\n  constructor() {}\n\n  getAll() {\n    return this.notes;\n  }\n\n  get(id: number) {\n    return this.notes[id];\n  }\n\n  getId(note: Note) {\n    return this.notes.indexOf(note);\n  }\n\n  add(note: Note) {\n    let newLength = this.notes.push(note);\n    let index = newLength - 1;\n    return index;\n  }\n\n  update(id: number, title: string, body: string) {\n    let note = this.notes[id];\n    note.title = title;\n    note.body = body;\n  }\n\n  delete(id: number) {\n    this.notes.splice(id, 1);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}